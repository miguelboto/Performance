title: ""
author: "Miguel Boto"
date: "01/7/2021"
output:
  html_document:
    df_print: paged
  pdf_document: default
---

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

library(tidyverse)
library(data.table)
library(lubridate)
library(readxl)
library(openxlsx)
library(patchwork)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(rpart)
library(cvms)
library(tibble) 
library(psych)
library(PerformanceAnalytics)
library(corrplot)
library(plotly)
theme_set(theme_bw())


resultados_jan_2021 <- read_excel("~/System/Relatórios gerenciais/resultados_jan_2021.xlsx", 
    col_types = c("date", "text", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric"))

oportunidades <- read_delim("~/System/Relatórios gerenciais/Analytics/oportunidades.csv", 
     ";", escape_double = FALSE, col_types = cols(price = col_number(), 
        close_date = col_date(format = "%d/%m/%Y"), 
        open_date = col_date(format = "%d/%m/%Y")), 
    trim_ws = TRUE)


upselling <- read_delim("~/System/Relatórios gerenciais/Analytics/oportunidades_ups.csv", 
     ";", escape_double = FALSE, col_types = cols(price = col_number(), 
        close_date = col_date(format = "%d/%m/%Y"), 
        open_date = col_date(format = "%d/%m/%Y")), 
    trim_ws = TRUE)

nc_e_ups <- read_delim("~/System/Relatórios gerenciais/Analytics/nc_e_ups.csv", 
    ";", escape_double = FALSE, col_types = cols(price = col_number(), 
        close_date = col_date(format = "%d/%m/%Y"), 
        open_date = col_date(format = "%d/%m/%Y")), 
    trim_ws = TRUE)

up_sales_report <- upselling %>% mutate(open_date = as.Date(open_date, origin = "1899-12-30"), 
                                         close_date = as.Date(close_date, origin = "1899-12-30"), 
                                         time = close_date - open_date)

nc_ups_sales_report <- nc_e_ups %>% mutate(open_date = as.Date(open_date, origin = "1899-12-30"), 
                                         close_date = as.Date(close_date, origin = "1899-12-30"), 
                                         time = close_date - open_date)

meta <- read_excel("~/System/Relatórios gerenciais/Pasta2.xlsx")



metas <- read_excel("~/System/Relatórios gerenciais/metas.xlsx", 
    col_types = c("text", "text", "text", 
        "text"))

ads_concorrentes <- read_delim("~/System/Relatórios gerenciais/Analytics/ads_concorrentes.csv", 
    ";", escape_double = FALSE, col_types = cols(data = col_date(format = "%d/%m/%Y"), 
        taxa = col_number()), trim_ws = TRUE)

prospectos_do_site <- read_excel("~/System/Relatórios gerenciais/Analytics/homeoffice_work/prospectos_do_site.xlsx", 
    col_types = c("date", "text", "text", 
        "text", "text", "text", "text", "date", 
        "text"))

sales_report <- oportunidades %>% mutate(open_date = as.Date(open_date, origin = "1899-12-30"), 
                                close_date = as.Date(close_date, origin = "1899-12-30"), time = close_date - open_date)



Pasta3 <- read_excel("~/System/Relatórios gerenciais/Pasta3.xlsx")

Pasta4 <- read_excel("~/System/Relatórios gerenciais/Pasta4.xlsx")


ads_concorrentes <- read_delim("~/System/Relatórios gerenciais/Analytics/ads_concorrentes.csv", 
    ";", escape_double = FALSE, col_types = cols(data = col_date(format = "%d/%m/%Y"), 
        taxa = col_number()), trim_ws = TRUE)

open <- sales_report %>% filter(status == "Open")

perdidas <- read_excel("~/System/Relatórios gerenciais/Analytics/perdidas.xlsx", 
    col_types = c("text", "numeric", "text", 
        "date", "date", "text", "text"))

impress <- read_excel("~/System/Relatórios gerenciais/Analytics/impress.xlsx", 
    col_types = c("date", "numeric", "numeric", 
        "numeric", "numeric"))


O <- nc_e_ups %>% filter(origin == "prospect") %>% group_by(month = lubridate::floor_date(open_date, "month")) %>%  filter(month >= "2018-01-01") %>% count(opportunity_ID) %>% summarize(total_ops = sum(n))

P <- impress %>% group_by(month = lubridate::floor_date(Data, "month")) %>% filter(month <= "2021-03-01") %>%
    summarize(total_impress = sum(Impressões), total_cliques = sum(Cliques), taxa = total_cliques/total_impress)

OOPP <- inner_join(O, P, by = "month")


indicadores_globais_vendas_e_faturamento <- read_excel("~/System/Relatórios gerenciais/indicadores_globais_vendas_e_faturamento.xlsx", 
    col_types = c("numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric"))


indicadores_globais <- indicadores_globais_vendas_e_faturamento %>% mutate(manutenções_NC_sobre_total = manutenções_NC_sobre_total * 100, taxa_fechamento = taxa_fechamento * 100, taxa_perdidas_vs_abertas_NC = taxa_perdidas_vs_abertas_NC * 100, consecução_meta_manutenções = consecução_meta_manutenções * 100, consecução_meta_receita = consecução_meta_receita * 100)

indicadores_globais_mensal <- read_excel("~/System/Relatórios gerenciais/indicadores_globais_vendas_e_faturamento.xlsx", sheet = "Planilha2", 
    col_types = c("numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric", "numeric", 
        "numeric", "numeric"))

faturamento_por_cliente <- read_excel("~/System/Relatórios gerenciais/Analytics/faturamento_por_cliente.xlsx", 
    col_types = c("text", "text", "text", 
        "text", "text", "text", "numeric", 
        "text", "numeric"))


```


```{r, echo=FALSE}
htmltools::img(src = knitr::image_uri(file.path(R.home("doc"), "html", "system.jpg")), 
               alt = 'system', 
               style = 'position:absolute; top:0; right:0; padding:10px;')
```



### Evolução 2021

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

resultados_jan_2021 %>% filter(label != "dez 20") %>% select(label, `Ticket Médio Abertas`, `Ops abertas`, Valor, `Ticket Médio Abertas`, `Op ganhas`, `Valor Ops. Ganhas`) %>% 
  knitr::kable()

```


```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}


 resultados_jan_2021 %>% filter(label != "dez 20") %>% ggplot(aes(`Ticket Médio Abertas`, `Ops abertas` , label = label, fill = label)) + geom_bar(stat = "identity") +
  geom_label(label.size = 0.20) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  ggtitle("Ticket Médio e nº de ops. abertas NC")

 resultados_jan_2021 %>% filter(label != "dez 20") %>% 
  ggplot(aes(`Op ganhas`, `Valor Ops. Ganhas`, label = label)) +
   geom_point(aes(size = `Op ganhas`), alpha = 0.3, color = "purple") +
    scale_size(range = c(3, 15)) + 
   geom_label_repel(aes(label = label), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') +
  ggtitle("Acumulado mensal Ops. ganhas NC")
 
 




```



### Status meta NC do segundo trimestre



```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
meta %>% knitr::kable()




```


### Status meta anual de novas manutenções e upselling

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
metas %>% knitr::kable()

```



### Análise oportunidades abertas e pendentes

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

            

open %>% ggplot(aes(market_class, price, color = market_class, fill = market_class)) + 
  geom_boxplot(alpha = 0.1) + 
  scale_y_continuous(trans = "log2") + 
   ggtitle("Valor médio e medianas de Oportunidades abertas por mercado")

n <- sales_report %>% filter(open_date >= "2021-01-01") %>% group_by(market_class) %>% summarise(Oportunidades = n(), Value = sum(price)) %>%
  ggplot(aes(Oportunidades, Value, color = market_class, label = market_class)) +
  geom_point(aes(size = Value, color = market_class), alpha = 0.5) +
  scale_size(range = c(3, 10)) + 
   geom_label_repel(aes(label = market_class), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') +
  ggtitle("Abertas 2021")

m <- sales_report %>% filter(close_date >= "2021-01-01" & status == "Closed Won") %>% group_by(market_class) %>% summarise(Oportunidades = n(), Value = sum(price)) %>%
  ggplot(aes(Oportunidades, Value, color = market_class, label = market_class)) +
  geom_point(aes(size = Value, color = market_class), alpha = 0.5) +
  scale_size(range = c(3, 10)) + 
   geom_label_repel(aes(label = market_class), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') +
  ggtitle("Ganhas 2021")

n + m + plot_layout(guides = 'collect')

rate <- sales_report %>% filter(close_date >= "2019-01-01") %>% group_by(market_class) %>%  count(status) %>% mutate(ops = sum(n), won = n, rate = n/ops) 

rate2 <- sales_report %>% filter(open_date >= "2021-01-01") %>% group_by(market_class) %>%  count(status) %>% mutate(ops = sum(n), won = n, rate = n/ops) 

rate %>% filter(status == "Closed Won") %>% ggplot(aes(rate, won, color = market_class, label = market_class)) +
   geom_point(aes(size = rate), alpha = 0.3) +
    scale_size(range = c(3, 15)) + 
   geom_label_repel(aes(label = market_class), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') + 
  ggtitle("Taxa de Op. ganhas (abertas a qualquer momento, mas fechadas em 2021)")


rate2 %>% filter(status == "Closed Won") %>% ggplot(aes(rate, won, color = market_class, label = market_class)) +
   geom_point(aes(size = rate), alpha = 0.3) +
    scale_size(range = c(3, 15)) + 
   geom_label_repel(aes(label = market_class), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') + 
  ggtitle("Taxa para abertas e fechadas em 2021")

sales_report %>% filter(close_date >= "2021-01-01" & status == "Closed Won") %>%
  ggplot(aes(price, fill = market_class, colour = market_class)) +
   geom_density(alpha = 0.1) +
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
    ggtitle("Histograma distribuição de preço de ops. ganhas 2021")

nc_e_ups %>% filter(origin == "prospect" & open_date >= "2018-01-01")  %>% group_by(status, month = lubridate::floor_date(open_date, "month")) %>% count(opportunity_ID) %>% summarize(total_ops = sum(n)) %>% ggplot(aes(month, total_ops, fill = status)) + geom_bar(stat = "identity") +
scale_fill_hue(c = 40) +
ggtitle("Op NC abertas e status data de abertura")


nc_e_ups %>% filter(origin == "prospect" & open_date >= "2018-01-01" & close_date  <= "2021-06-30" & status != "Open") %>% group_by(status, month = lubridate::floor_date(close_date, "month")) %>% count(opportunity_ID) %>% summarize(total_ops = sum(n)) %>% ggplot(aes(month, total_ops, fill = status)) + geom_bar(stat = "identity") +
scale_fill_hue(c = 40) +
ggtitle("Op NC fechadas e status data de fechamento")


 perdidas %>% group_by(competitor) %>% ggplot(aes(competitor, fill = reason)) +
  geom_bar(alpha = 0.4) +
  ggtitle("Acumulado Oportunidades perdidas")
 

```

### Consecução por comercial

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

Pasta4 %>% knitr::kable()



```

*A meta de Tecnoimagem não é considerada para a metal geral.




### Serie temporal anual: médias mensais


```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}




j <- indicadores_globais_mensal %>%  filter(ano >= 2015) %>% mutate(média_manut = novas_manutenções_NC, média_mensal_op_NC_ganhas = op_ganhas_NC, média_mensal_OP_abertas = Op_abertas_NC, op_ganhas_NC_mensais = op_ganhas_NC/12, op_abertas_NC_mensais = Op_abertas_NC/12) %>%
  ggplot(aes(média_manut, média_mensal_op_NC_ganhas, label = ano)) +
   geom_point(aes(size = média_manut), alpha = 0.3, color = "orangered4") +
    scale_size(range = c(3, 15)) + 
   geom_label_repel(aes(label = ano), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') +
    ggtitle("Manutenções e Op. ganhas")

l <- indicadores_globais_mensal %>%  filter(ano >= 2015) %>% mutate(média_mensal_op_NC_ganhas = op_ganhas_NC, média_mensal_op_abertas = Op_abertas_NC) %>%
  mutate(valor_abertas = (Op_abertas_NC * ticket_médio_NC)/12) %>%
  ggplot(aes(valor_abertas, média_mensal_op_abertas, label = ano)) +
   geom_point(aes(size = valor_abertas), alpha = 0.3, color = "slategray4") +
    scale_size(range = c(3, 15)) + 
   geom_label_repel(aes(label = ano), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') +
    ggtitle("NC: médias abertas")

l + j + plot_layout(guides = 'collect')

a <- indicadores_globais_mensal %>% filter(ano >= 2018) %>% ggplot(aes(ano, total_novas_manutenções, fill = total_novas_manutenções))  +
  geom_bar(stat="identity", alpha = 0.7) +
  geom_point(aes(ano, média_acumulado_receita, size = média_acumulado_receita), alpha = 0.5, color = "palegreen3") +
  scale_size(range = c(3, 12)) +
  ggtitle("Média Mensal de Receita e Novas Manutenções")

a + scale_fill_gradient(low = "slategray1", high = "slategray4")

```


### Faturamento: ranking de clientes e volumem por mercado

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
faturamento_por_cliente %>% filter(price >= 2000) %>% mutate(price_x_licence = price/access) %>%
  mutate(label = reorder(label, price)) %>%
  ggplot(aes(price, label, fill = market_class)) +
  geom_bar(stat = "identity") +
  ggtitle(">2000")
  
faturamento_por_cliente %>% filter(price <= 1999.99 & price >= 700) %>% mutate(price_x_licence = price/access) %>%
  mutate(label = reorder(label, price)) %>%
  ggplot(aes(price, label, fill = market_class)) +
  geom_bar(stat = "identity") +
  ggtitle("<2000 >700")

faturamento_por_cliente %>% filter(price <= 699.99 & price != 0) %>% mutate(price_x_licence = price/access) %>%
  mutate(label = reorder(label, price)) %>%
  ggplot(aes(price, label, fill = market_class)) +
  geom_bar(stat = "identity") +
  ggtitle("<700")

faturamento_por_cliente %>% group_by(market_class) %>% mutate(price = sum(price)) %>%
  ggplot(aes(reorder(market_class, -price), price)) +
  geom_bar(stat = "identity", aes(fill = market_class)) +
  xlab("Market Class") +
  ggtitle("Total Valores Mensais por mercado")

faturamento_por_cliente %>% group_by(market_class) %>% mutate(total_price = sum(price)) %>%
  ggplot(aes(reorder(market_class, -total_price), price, fill = market_class, color = market_class)) +
  geom_boxplot(alpha = 0.1) +
  scale_y_continuous(trans = "log2") + 
  geom_jitter(width = 0.2) +
  xlab("Market Class") +
  ylab("Price (log2)") +
  ggtitle("NFs por mercado")
  

```



### Pesquisas de Marca 

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

ads_concorrentes %>% filter(data >= "2018-03-01") %>% ggplot(aes(data, pesquisas, color = marca )) +
    geom_line() 

ads_concorrentes %>%  filter(data >= "2021-01-01") %>% ggplot(aes(marca, pesquisas, color = marca )) + 
  geom_boxplot(outlier.colour = "red", outlier.shape = 1) +
  ggtitle("Acumulado 2021")
  


```

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

ads_concorrentes %>% filter(data == "2021-05-01") %>% 
  ggplot(aes(taxa_mensal, pesquisas, color = marca, label = marca )) +  
  xlab("taxa_mensal / total pesquisas Maio") +  geom_point(aes(size = pesquisas), alpha = 0.3) +
    scale_size(range = c(2, 15)) + 
  geom_label_repel(aes(label = marca), box.padding = 0.35, point.padding = 0.5, segment.color = 'grey50') 

```

### Prospectos orgánicos: site + direct, Jan-Jun, 2020 vs 2021

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

Pasta3 %>% knitr::kable()
